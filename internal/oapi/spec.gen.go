// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

