// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xda4/bNtb+K3z1LpAv7sx0mwW6/rRp2p0OELRBkqIogsGAlmiJjUSqJOVZbzD/fcGb",
	"7pRkW77I9qcZSxQvh885fHh4SH71fJqklCAiuDf/6nE/QglU/76NMSLije8jzj+qx/JpymiKmMBIpfEZ",
	"ggIFT1DIX0vKEvmfF0CBvhE4Qd7ME+sUeXOPC4ZJ6L3MPJRAHMvkjTc4cDx+8lVdWt9SmImo9GZBaYwg",
	"ka9SyPkzZW25vsw8hv7KMEOBN/9sMrF1m5Xb9Zg3gS7+RL6QGRvRBAHrkg0W69Ya+zQjgrW/CyhlTyRL",
	"FoiNJyIuGELtr/6L0yefBqhfRCaT0icz3cSiQW5RuWQEfYFXqL33FpiJSCKpAa02VDkEQ2CCWl+kESWo",
	"S9Ip9kXG2j/mGXNmvILiqVIZTAQKEWsIVOVQ5FWUWG56raJ59jMrOrfMf4dxjJySX8AYEr8mW5ot4pJ0",
	"TaEKsphUki7WG3VDFz5rYrEVM4W2te8nxihzNQzJl/3F6GRtud/DBD0kMESuEtxtDF2gwDK//kqpjrX5",
	"2K9cdXTaHbpC7MlV4swLEPcZTgWmpP095kqhB0IjoM8kpjB4ijH5sqHNSrNFjHnk0EC37jI8GLkMxQhy",
	"9DTYkHBhUiKSJbJTjKLNPEzyf7PUp4n84HHW26WlVs6s0usWlGRty51Vuq9W/Wrf1UXfhpMHsqLYd0JF",
	"4kxDWqCEN99vCIUuDRjeZ00Bhg6htbXYPICMwfXWA2aaMT9yosbJbAabfqvnpgr1AktWXvdQW0N/Qc8f",
	"BWXOvl0iKEeToNK9f2No6c29/78tWN+toXy3JZvSIkeCnkfJqSaJvJa6BEdDeYyEQOwHGqyHQ3n7tgos",
	"4gHWWifr6SNTdedo5SDD9dFKJWstggr0TJmI1gdFQ17qvkFRFNTW+vfWtG47GG48GdmWULaTv6qxr1E9",
	"d6d/QCuMnjfnJx0mr8t2M1WcY2oBGXdYvEa1PyLI/MhVbWn6npRpHWxwR25pDxsr2euirm3d8wmGG/YN",
	"GVQhlaqtwD9oxjrVXw2ZKw3MEdR/ZGvCkE+TBJFgtBx5inwM41+XS8T4nk1Uufb1kmeF5Jv9JvPEZEm1",
	"nSIC+qI0JHgRitObkNIlSykTWQjjf4Xy1Y1PkwaP9968fwAB9bMEEQHlM7CkDNz/+uu/PwAFjRmAIMAh",
	"FjAGEtGAy6c3Xj7ceaXEkoIgxnXW397c3dwpV0uKCEyxN/e+u7m7+U5aLCgiJdZbqPxECnmZaoaEn6rI",
	"Q+DNvfeZ8SSpjxhMkFA98/lrrR167goeflSE25t7f2WIrS1znntaBdXroj8Ey9DM+K7a1OhRJ0ZcSAph",
	"5W0MBEzTGPuqqrd/cj0pKrLqwkuLh+ylChRZMfWAp5RwrYt/v3utVLLSbJ6pXJZZHK9Blkr7EkiRv767",
	"G1Bd9B+YpJqymOmv/gtSyDgmITCtn4PP6vmj0pFBbSzPtVXjqvVewMBmrqv7ervqavgAQgVY0owECr2+",
	"xcIcfMbBeJXOS5E5/kNLuJpCDmOMwBhwxFaIAV3NF+X6SRLI1t7c+031EgfQ1hNagAsYSmh7BvGP8rtb",
	"GAQ/FD6XELUoyT0Sb4pUOyoKDjZSkVk9/zeJnGMBQQEMAkcZMDGTV3c5/dO9x4Z+3I2soRVPWAseCuUD",
	"eYfshOZnVeAx0Pz67p/bVRmTFYxxAEyXjlU5n5JljDVL2VrT3gQBB8YvKAEpImSk+YoDLeuS1uneLrSO",
	"mXGpQ+XYCAPThvq2f9RXlycOAXsj7ElZ8XskChP+igOYoyG34ubJo3IMObjNMAyZZOOCaG+8pomfPmJz",
	"QhC+ENrU0LhnLKKTZ0ykU82k3fYhE7qQGGkXbLW4DyihK0W+1FxmyWhSGhaA/Bws1uDhR0AZYDZxrKc+",
	"XKfHguuEeAkIlWkxByFeIeLNair+o6rGW1mpY8xfGuRMzlTdZcg2qpfHGX7K0+gDjDqmy6ehAt24faUB",
	"WdIKBTk58rjYyxiYPDB12d0XcwVVC4eJY4UkbeBKtjCCHGACIuwGV0p5G6+hXEzO5O0C4297/DImKmhy",
	"wNp6UmgdGzFDMFgrJCmIyTFSG7AysE5vzmisbH3K2K4Glna8N2uxXXPGt+V05zNxrIYLnKud3VUdAoo0",
	"447gCgFEaBZG1j1xWkpgIVqmvpuMDEol8pW0gou3kuM8luGsvChXItsOLd3pheukDB79oMRaayN52eVS",
	"zNJCy2L0Cz5gWiYt8XiwOzLjreLtynk38Nu1g8/lrDuepdqXq+6YPrqrc+4s9Km+mtmmUpIO2NCZbjJw",
	"byI2uxSse0J3QkTgwP4sNWWZGgkwMVIWMqr/+wiAamhz+Nc0ddDgPxLMLtvVNSG8lYDTBja3G8sAZR8j",
	"cN06HG783dYuXcbom++6mAi23yrnooQ3Qc9uiDs47XEG3Ks2XYo2TWiQKJhsuxJZFvtgNwX0U9kHG6Df",
	"pV4q0WQIbXmH4yFYhtrjMLVFWgJ0tdUybS/JbaWng6BzUlOhwZy1AqErcR20QqvwxAFdbk1jRwDUFoul",
	"s3Zr99uHdy7Q5htYT3s9dkIg0kua1iYJ2jvC6W1incGv96VkZ2ekKtvkrhZqeAyJ3vDHVfhuA2RaqiWY",
	"fYLhMBolEx7dcH2CobsAAcOdo0jG42nFPsIrWB1RdAKGu7CznRF5imavBJurzRtm82C4Eye7DMN2nnRs",
	"62ggVVUbGqf272JSjo8TMDzJkDhpMnvIY4RgrA9Va12/eRsh/4tuqilOfwC4gCLjbSs1P+sctzJ/uey9",
	"h1cJWGKCZkBEkHwxBIV/wST8v851nIFmryIuXWXgy8aWxPRRtdgICuuAuS6GbWLqzjFGuxYueA1ZGTDc",
	"VAJRDXxAhLmgqrctyixqNMxivGBQnxjogtk7k+S6FeCKsSFbAeIcLxZyFkEGcjTUR/65mc87leS0jlbo",
	"4ygxDUMUADzNxZstmYo6UUQBmKEQc4GYZmmnQ03e0VACU9GSYiuub8/Gaz1QgZgD0Jw05QMSGTOULKFc",
	"tt5HRMRrYE7VC7SG3ICHJUgZXeEABTOwxLE0nkZ7Fmv5PWZqjtDGbOw5bH2WV9JzHHCn3eUVApMbxsZR",
	"QTX7t0//Q+2IuQ2M7Q4z+6LP7Do4L7bJcSPpnIyp3zkezGFr/d6o4mC2vm77SemOoCAjPFvINwvk6EN7",
	"ePBpOI8aZ88dYqwsLM0aCZALLJC2Ub464ZU+XfUcaQWaQIx52QiVsNPlXqpAbP8kqdnd21Ol3RmuFBmg",
	"SyPUAgd2KxYpC8chWDfx2EJ7D6G7fdyjEMMIo7l1POxTx0b0Olj9avR/p3Yps1494HL4aG/PVA1aB5Ed",
	"B/1apc5w7G89V/SQFMAesbcJB6gcKN1NAd6XTmXu7Lw84SRie+onoh5i1J9aqGURtl4+mtviqQBGXwB7",
	"0e5mFHv+bmAo++hwPLLTpoHDI3hupobLOqycoHRTozKM9uGXaTUvhwvS3cm6TcrZM1Ic+QAsOSLKjz0+",
	"XrF73bMxnVDzPj2rkNN7e1eBy3fwvppycgR1Css60yQHZmUnr/wrM2XtgJ31+Xcv5nywqaa1nlOJObmk",
	"1Rzr/znVFR2Lp9Yd5ZV1nOJ2ie4Ju4k77TGGOtUkpurV8OQDmDwt6clN0pnt+EYE8qzToJmv9mHOml13",
	"OB65PWyuWxVP80CxCPKSPZe9i4I8gOO0zHp1dtmpmY555fHM+NUMXJIZmNRgV0wk3SoluRJXN2jdmzN4",
	"XNPHj0WqHjXTKYFVrjZN00We6/Rx6x4zkqtPvvTjSm/9bII7ezvs5zwK9OxCOCs3v12DODcOFNZIaokT",
	"zvHWRYVHhdf1NOepwsrs/zBYqh+K3IGtwpaZrZ7ddmzAbqgJjzuj7K7bddgxcSmOniLBL5VYyC7LUEm7",
	"H5bceoHvKN4/joi4pLU92V1m7mXDpwRVTuHCDQjQNwnEMe+KqRJDdmwPUOPOLYcn5Gk77EZqAcPJ+diE",
	"6mwLGNn1fcEvspXNsBe1k3ZQwMso8LrondbTwVkBmRaQuUcnDZF9DEk1g3C5q1AjOQIdPetwAR5jZDk6",
	"hq6X/k7YgBX+uTakK0pF0wHHLX0qUl2Ajyz3YwiaFgsbDZeZgAJzgX27IGxudO0Q4+/2ztfzumvkgu4p",
	"Hu2+Vvf1v+7xZxh8dKppXADRRM6hr4HYHruXMdY1VG0aw1337drPmEdq/9b2N7XaLAbd1ponHnpj6++2",
	"gtdbW6+3tu7x1tbnAme5othHXZuEx8LnNb73Qo5t6QOa25kySVN4Xf87xm2uOcgmc6Nrt1pIqrKmGatv",
	"IG+Y4z/yROcztczbdMAt3G9tvyQQE/eGbfmNykSLOGOxN/e+powK6tP4ZX57+zWiXLzMv6aUiZdbmGJv",
	"5q0gw3ARa0lF1LLPJcxi4c29mPowVo9nHiJZIkssP0sZDYypZLVPv7/7/q70lfqpUpoaVVNHQqSl1Oan",
	"/KMcGS+PL/8LAAD//5kVIjddnwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

