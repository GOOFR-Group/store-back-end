// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

