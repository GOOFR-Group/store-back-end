// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

