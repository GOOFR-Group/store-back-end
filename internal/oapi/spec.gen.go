// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"RFYpbf6U/6gQxtP90/8DAAD//yA/ebQBogAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

