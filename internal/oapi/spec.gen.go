// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"EedZpbX+Kf7IoP318fX/AQAA///izNjhy5IAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}

