version: '3.8'

services:
  db:
    image: store_postgres:latest
    build:
      context: tools/db/
      dockerfile: Dockerfile
    healthcheck:
      test: nc -vz localhost 5432
    restart: unless-stopped
    secrets:
      - postgres_password
    environment:
      - POSTGRES_DB=store_db
      - POSTGRES_USER=goofr
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    volumes:
      - database-data:/var/lib/postgresql/data
      - $PWD/tools/db/initdb/.:/docker-entrypoint-initdb.d/
  api:
    image: store_api:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        GOTAGS: dev
    healthcheck:
      test:
        - CMD
        - curl
        - -X
        - GET
        - -f
        - http://localhost:8080/api/health
      interval: 3m
      timeout: 10s
      retries: 3
      start_period: 5s
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    secrets:
      - postgres_password
      - smtp_email
      - smtp_password
    environment:
      - GOOFR_Store_PATH=/go
      - GOOFR_Store_CONF_PATH=conf
      - GOOFR_Store_STATIC_PATH=static
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=store_db
      - DB_USER=goofr
      - DB_SSLMODE=disable
      - DB_PASSWORD_FILE=/run/secrets/postgres_password
      - SMTP_EMAIL_FILE=/run/secrets/smtp_email
      - SMTP_PASSWORD_FILE=/run/secrets/smtp_password

volumes:
  database-data: null

secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  smtp_email:
    file: ./secrets/smtp_email.txt
  smtp_password:
    file: ./secrets/smtp_password.txt
